{"version":3,"sources":["webpack:///webpack/bootstrap a575721303923f493dfd","webpack:///./src/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA,+C;AACA,wB;AACA,wB;AACA,sB;AACA,E;AACA;AACA;AACA,oD;AACA;AACA,kB;AACA;AACA,0C;AACA;AACA,kC;AACA;AACA,wC;AACA,yC;AACA,qC;AACA;AACA,6C;AACA;AACA,kB;AACA;AACA;AACA,a;AACA;;AAEA,2C;AACA;AACA,6D;AACA,8D;AACA,6D;AACA;;AAEA,2C;AACA,iB;AACA,iC;AACA,G;AACA,E;AACA;AACA,2C;AACA,iB;AACA,qC;AACA,G;AACA;;AAEA","file":"dist.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a575721303923f493dfd\n **/","function SquareOverlay(center, length, color){    \n this._center = center;    \n this._length = length;    \n this._color = color;    \n}    \n// 继承API的BMap.Overlay    \nSquareOverlay.prototype = new BMap.Overlay();\nSquareOverlay.prototype.initialize = function(map){    \n// 保存map对象实例   \n this._map = map;        \n // 创建div元素，作为自定义覆盖物的容器   \n var div = document.createElement(\"div\");    \n div.setAttribute('class', 'location_circle')\n div.style.position = \"absolute\";        \n // 可以根据参数设置元素外观   \n div.style.width = this._length + \"px\";    \n div.style.height = this._length + \"px\";    \n div.style.background = this._color;      \n// 将div添加到覆盖物容器中   \n map.getPanes().markerPane.appendChild(div);      \n// 保存div实例   \n this._div = div;      \n// 需要将div元素作为方法的返回值，当调用该覆盖物的show、   \n// hide方法，或者对覆盖物进行移除时，API都将操作此元素。   \n return div;    \n}\n\nSquareOverlay.prototype.draw = function(){    \n// 根据地理坐标转换为像素坐标，并设置给容器    \n var position = this._map.pointToOverlayPixel(this._center);    \n this._div.style.left = position.x - this._length / 2 + \"px\";    \n this._div.style.top = position.y - this._length / 2 + \"px\";    \n}\n\nSquareOverlay.prototype.show = function(){    \n if (this._div){    \n   this._div.style.display = \"\";    \n }    \n}      \n// 实现隐藏方法  \nSquareOverlay.prototype.hide = function(){    \n if (this._div){    \n   this._div.style.display = \"none\";    \n }    \n}\n\nwindow.SquareOverlay = SquareOverlay\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}